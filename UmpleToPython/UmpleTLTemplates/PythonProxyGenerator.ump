use proxy_AbstractMethodDeclaration.ump;
use PythonDistributedTemplates.ump;


namespace cruise.umple.compiler.python;

external interface ILang{}

class PythonProxyGenerator {
    depend cruise.umple.parser.Position;
    depend cruise.umple.compiler.*;
    depend cruise.umple.util.*;
    depend java.util.*;

    isA ILang;

    // Add a newline to the end of the input
    private void appendln(StringBuilder buffer, String input, Object... variables)
    {
        append(buffer, input + "\n", variables);
    }

    // This method will be used to append formatted strings
    // i.e. format("Hello {0} {1}", "andrew","forward");
    private void append(StringBuilder buffer, String input, Object... variables)
    {
        buffer.append(StringFormatter.format(input,variables));
    }

    emit getCode(UmpleModel model, UmpleElement uElement)(PythonProxyGenerator);


    PythonProxyGenerator <<!<</*PythonProxyGenerator*/>>
<<#
  UmpleInterface uInterface = (UmpleInterface) uElement;
  //GeneratedInterface gInterface = uInterface.getGeneratedInterface();
  PythonGenerator gen = new PythonGenerator();
  gen.setModel(model);

  String extraCode = "";
  if (uInterface.getExtraCode() != null)
  {
    extraCode = uInterface.getExtraCode();
  }

#>>
 <<# if (uInterface.hasMethods()) { #>><<@ UmpleToPython.proxy_AbstractMethodDeclaration >>

<<# } #>>!>>
}
